/**
 * 
 */
package com.tiremgmt.vehiclepartsordersvc.controller;

import java.util.Arrays;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
import com.tiremgmt.vehiclepartsordersvc.dto.MemberDTO;
import com.tiremgmt.vehiclepartsordersvc.dto.OrdersDTO;
import com.tiremgmt.vehiclepartsordersvc.service.OrderService;

import lombok.extern.slf4j.Slf4j;

/**
 * @author javacloudmc275
 *
 */
@RestController
@RequestMapping("api/order")
@Slf4j
public class OrderController implements OrderApi{

	
	@Autowired
	private OrderService orderService;
	
	@Override
	@PostMapping("/v1/save")
	public ResponseEntity<String> saveOrder(@RequestBody OrdersDTO ordersDTO,@RequestHeader("Authorization") String authorization) {
		return new ResponseEntity<>(orderService.saveOrder(ordersDTO,authorization),HttpStatus.OK);
	}

	@Override
	@PutMapping("/v1/update")
	public ResponseEntity<Boolean> updateOrder(OrdersDTO ordersDTO) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	@GetMapping("v1/getOrderByNumber/{orderNumber}")
	@HystrixCommand(fallbackMethod = "defaultOrders")
	public ResponseEntity<MemberDTO> getOrderByNumber(HttpServletRequest request,@PathVariable("orderNumber")String orderNumber,@RequestHeader("Authorization") String authorization) {
		String authorizationHeader = request.getHeader("Authorization");
		return new ResponseEntity<>(orderService.getOrderByNumber(orderNumber,authorization),HttpStatus.OK);
	}

	@Override
	@GetMapping("v1/getAllOrdersByUsername/{username}")
	public ResponseEntity<MemberDTO> getAllOrdersByUsername(@PathVariable("username")String username,@RequestHeader("Authorization") String authorization) {
		return new ResponseEntity<>(orderService.getAllOrdersByUsername(username,authorization),HttpStatus.OK);
	}
	

//	@HystrixCommand
	public ResponseEntity<MemberDTO> defaultOrders(HttpServletRequest request,String orderNumber,String authorization) {
        log.info("fallback method to generate default order details.");
        List<OrdersDTO> orders = Arrays.asList(new OrdersDTO(new Long(000)	,"default","car spare parts","spare parts","12082020092578",1,"Needs services","default",null));
        MemberDTO memberDTO = new MemberDTO(new Long(0000), "default", "India", "TN","India","default@gmail.com", "AVZANL7654G", "9876543212", "22-09-1990", "Default", null,"Default", null, orders);
        return new ResponseEntity<>(memberDTO,HttpStatus.OK);
    }
	

}
